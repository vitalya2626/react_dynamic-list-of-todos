{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","todoId","filterStatus","filterTitle","selectUser","userId","setState","props","onSelectUser","setFilter","event","target","value","onInputHandler","filterByStatus","todo","completed","filterByTitle","title","toLowerCase","includes","todos","this","filteredTodos","filter","className","onChange","map","key","id","cn","type","checked","readOnly","onClick","React","Component","BASE_URL","getUser","fetch","then","response","json","data","CurrentUser","user","prevProps","name","email","phone","clearUser","App","selectedUserId","userID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51153b7e.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport class TodoList extends React.Component {\n  state = {\n    todoId: 0,\n    filterStatus: 'all',\n    filterTitle: '',\n  };\n\n  selectUser = (todoId, userId) => {\n    this.setState({ todoId });\n    this.props.onSelectUser(userId);\n  }\n\n  setFilter = (event) => {\n    this.setState({ filterStatus: event.target.value });\n  }\n\n  onInputHandler = (event) => {\n    this.setState({ filterTitle: event.target.value });\n  }\n\n  filterByStatus = (todo) => {\n    const { filterStatus } = this.state;\n\n    switch (filterStatus) {\n      case 'completed': return todo.completed;\n      case 'active': return !todo.completed;\n      default: return true;\n    }\n  }\n\n  filterByTitle = (todo) => {\n    const { filterTitle } = this.state;\n\n    if (todo.title === null) {\n      return;\n    }\n\n    // eslint-disable-next-line consistent-return\n    return todo.title.toLowerCase().includes(filterTitle.toLowerCase());\n  }\n\n  render() {\n    const { todos } = this.props;\n    const { todoId } = this.state;\n\n    const filteredTodos = todos\n      .filter(this.filterByStatus)\n      .filter(this.filterByTitle);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <form>\n            <label className=\"TodoList__label\">\n              Todo filter:\n              <input\n                onChange={this.onInputHandler}\n                className=\"TodoList__filter\"\n              />\n            </label>\n\n            <label className=\"TodoList__label\">\n              Filter by status:\n              <select\n                className=\"TodoList__select\"\n                onChange={event => this.setFilter(event)}\n              >\n                <option value=\"all\">Show all</option>\n                <option value=\"active\">Show active</option>\n                <option value=\"completed\">Show completed</option>\n              </select>\n            </label>\n          </form>\n          <ul className=\"TodoList__list\">\n\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={cn('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  onClick={() => this.selectUser(todo.id, todo.userId)}\n                  className={cn('TodoList__user-button', 'button', {\n                    'TodoList__user-button--selected': todo.id === todoId,\n                  })}\n                  type=\"button\"\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  onSelectUser: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const getTodos = () => fetch(`${BASE_URL}/todos`)\n  .then(response => response.json())\n  .then(response => response.data);\n\nexport const getUser = id => fetch(`${BASE_URL}/users/${id}`)\n  .then(response => response.json())\n  .then(response => response.data);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    const { userId } = this.props;\n\n    getUser(userId).then(user => this.setState({ user }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    const { userId } = this.props;\n\n    getUser(userId).then(user => this.setState({ user }));\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return (\n        <p>Loading...</p>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${user.id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          className=\"CurrentUser__clear\"\n          type=\"button\"\n          onClick={this.props.clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos().then(todos => this.setState({ todos }));\n  }\n\n  selectUser = (userID) => {\n    this.setState({ selectedUserId: userID });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onSelectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}